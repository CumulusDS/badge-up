name: ci-cd

on:
    push:
        branches:
            - '**/*'
    pull_request:
    release:
        types: [released]

jobs:
    unit:
        name: Unit
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node: [18, 19, 20, 22]
        timeout-minutes: 10
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install Node ${{ matrix.node }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node }}
            - name: Install NPM credentials
              run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
              env:
                  NPM_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
            - name: Get yarn cache
              id: yarn-cache
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - name: Restore yarn cache
              uses: actions/cache@v4
              with:
                  path: ${{ steps.yarn-cache.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install NPM Packages
              run: yarn install --frozen-lockfile
            - name: Test
              run: yarn test
            - name: Upload test coverage
              uses: actions/upload-artifact@v4
              with:
                  name: test-coverage
                  path: var/coverage/test/
    publish:
        name: Publish
        runs-on: ubuntu-latest
        needs: unit
        if: github.event_name == 'release'
        timeout-minutes: 10
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install Node 20
              uses: actions/setup-node@v4
              with:
                  node-version: 20
            - name: Install NPM credentials
              run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
              env:
                  NPM_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
            - name: Get yarn cache
              id: yarn-cache
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - name: Restore yarn cache
              uses: actions/cache@v4
              with:
                  path: ${{ steps.yarn-cache.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install NPM Packages
              run: yarn install --frozen-lockfile
            - name: Publish
              run: npm publish
